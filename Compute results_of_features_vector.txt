clear all; close all; clc;
% clc;

% n=100 to execute each algorithm 100 time and computer the average result. 
n = 100;
result1 = 0.0;
result2 = 0.0;
result3 = 0.0;
result4 = 0.0;
result5 = 0.0;
result6 = 0.0;
result7 = 0.0;
result8 = 0.0;
result9 = 0.0;
result10 = 0.0;
result11 = 0.0;
resutl12 = 0.0;
result13 = 0.0;
result14 = 0.0;
result15 = 0.0;
result16 = 0.0;
result17 = 0.0;
result18 = 0.0;


for i=1:n
% To execute each time and delete different links from the previous execution
links_delet;    

% To calculate the score of each method
    resultcn   = cn_own(mod_adj);
    resultjc   = JC(mod_adj); 
    resultaa   = predictLinksAA(mod_adj);
    resultra   = RA(mod_adj);
    resultpa   = PA(mod_adj);
    resultsi   = SI(mod_adj);
    resulthp   = HP(mod_adj);
   

%to colculate the precesion and recall for each result
   [acc_pa_haji, prec_pa_haji]     =  compute_accuracy_new(orig_adj,mod_adj,resultpa_haji);
    

    [acc_cn, prec_cn]     =  compute_accuracy_new(orig_adj,mod_adj,resultcn);
    [acc_jc,prec_jc]      =  compute_accuracy_new(orig_adj,mod_adj,resultjc);
    [acc_aa, prec_aa]     =  compute_accuracy_new(orig_adj,mod_adj,resultaa);
    [acc_ra, prec_ra]     =  compute_accuracy_new(orig_adj,mod_adj,resultra);
    [acc_pa, prec_pa]     =  compute_accuracy_new(orig_adj,mod_adj,resultpa);
    [acc_si,prec_si]      =  compute_accuracy_new(orig_adj,mod_adj,resultsi);
    [acc_hp,prec_hp]      =  compute_accuracy_new(orig_adj,mod_adj,resulthp);
    %[acc_pro, prec_pro]   =  compute_accuracy_new(orig_adj,mod_adj,resulthp);

    

    result7 = result7 + acc_cn;
    result17 = result17+ acc_jc;
    result6 = result6 + acc_aa;
    result3 = result3 + acc_ra ;
    result9 = result9 + acc_pa;
    result18 = result18+ acc_si;
    result11 = result11 + acc_hp; 

   
%    [acc_k_pa, prec_k_pa]     =  compute_accuracy_new(orig_adj,mod_adj,resultcom);
%    [acc_k_PSI, prec_k_PSI]     =  compute_accuracy_new(orig_adj,mod_adj,resultPSI);
   
%    disp(strcat('Adamic_Adar(AA): AUC            AA =',num2str(acc_aa)  ,' , PREC: =',num2str(prec_aa)));
%    disp(strcat('Hub_Promoted: AUC               HP =',num2str(acc_hp)  ,' , PREC: =',num2str(prec_hp)));
%    disp(strcat('Leicht_Holme_Nerman: AUC       LHN =',num2str(acc_lhn) ,' , PREC: =',num2str(prec_lhn)));
%    disp(strcat('Parameter_Dependent: AUC        PD =',num2str(acc_pd)  ,' , PREC: =',num2str(prec_pd)));
%    disp(strcat('Resource_Allocation: AUC        RA =',num2str(acc_ra)  ,' , PREC: =',num2str(prec_ra)));


%    disp(strcat('Common_Neighbors: AUC           CN =',num2str(acc_cn)  ,' , PREC: =',num2str(prec_cn)));
%    disp(strcat('Global_Positioning_s(GPS): AUC GPS =',num2str(acc_gps) ,' , PREC: =',num2str(prec_gps)));
%    disp(strcat('Preferential_Attachm: AUC       PA =',num2str(acc_pa)  ,' , PREC: =',num2str(prec_pa)));
%    disp(strcat('Katz: AUC                     katz =',num2str(acc_katz),' , PREC: =',num2str(prec_katz)));
%    disp(strcat('MFI Updated: AUC       mfi_updated =',num2str(acc_mfi_updated),' , PREC: =',num2str(prec_mfi_updated)));
%    disp(strcat('psi_updated: AUC               psi =',num2str(acc_psi_updated),' , PREC: =',num2str(prec_psi_updated)));

end

disp(strcat('cn    =',num2str(result7/n)));
disp(strcat('aa    =',num2str(result6/n)));
disp(strcat('ra    =',num2str(result3/n)));
disp(strcat('pa    =',num2str(result9/n)));
disp(strcat('si   =',num2str(result2/n)));
disp(strcat('hp    =',num2str(result11/n)));
disp(strcat('jc   =',num2str(result17/n)));

M1(:,1) = [result7; result6; result3; result9; result2; result11; result17];

% After computing M1, change the dataset execute again the file to compute the next features vector. 
% M2(:,1) = [result7; result6; result3; result9; result2; result11; result17];




   